image: ubuntu

environment:
  nodejs_version: "8.12.0"
  DOCKER_USER:
    secure: 9LU4zEJHdpb+7UcFHNyvQQ==
  DOCKER_PASS:
    secure: SpDXXy2IWz1XFdorgWZcNWfmUze0KkAOeZQNnzWtZ7I=

services:
  - docker

install:
  - wget https://github.com/GitTools/GitVersion/releases/download/v4.0.0/GitVersion-bin-net40-v4.0.0.zip
  - unzip -d gitversion GitVersion-bin-net40-v4.0.0.zip
  - sh: nvm install $nodejs_version

before_build:
  - sh: |
      dotnet restore src/DataDock.sln
      mono gitversion/GitVersion.exe /l console /output buildserver /updateassemblyinfo
      GitVersion_SemVer=$(mono gitversion/GitVersion.exe /output json /showVariable SemVer)
      echo $GitVersion_SemVer

configuration: Release

build_script:
  - dotnet build -c Release src/DataDock.sln
  - msbuild /t:BuildImages /p:Tag=$GitVersion_SemVer build.proj 

test_script:
  - sh: |
      exit_code = 0
      for dir in ./src/*.Tests;
      do
        pushd $dir
        test=${dir%/}
        test=${test##*/}
        echo "build: Testing project $test in $dir"
        testlog=$test.trx
        dotnet test -c Release --logger:trx\;LogFileName=$testlog -r .
        if [ $? -ne 0 ]
        then
            exit_code=$?
        fi
        popd
      done
      exit $exit_code
      

deploy_script:
  - sh: docker login -u="$DOCKER_USER" -p="DOCKER_PASS"
  - sh: docker push datadock/web:$GitVersion_SemVer
  - sh: docker push datadock/worker:$GitVersion_SemVer
