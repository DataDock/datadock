@model DataDock.Web.ViewModels.OwnerSettingsViewModel



<div class="ui container">

    @Html.HiddenFor(m => m.OwnerIsOrg)
    @Html.HiddenFor(m => m.OwnerId)
  

    <h4 class="ui dividing header">Portal Front End</h4>
  
    <div class="field">
        <div class="ui checkbox">
            @Html.CheckBoxFor(m => m.DisplayGitHubAvatar, new { @class = "" })
            @Html.LabelFor(m => m.DisplayGitHubAvatar, new { @class = "" })
            @Html.ValidationMessageFor(m => m.DisplayGitHubAvatar)
        </div>
    </div>

    <div class="field">
        <div class="ui checkbox">
            @Html.CheckBoxFor(m => m.DisplayGitHubDescription, new { @class = "" })
            @Html.LabelFor(m => m.DisplayGitHubDescription, new { @class = "" })
            @Html.ValidationMessageFor(m => m.DisplayGitHubDescription)
        </div>
    </div>

    <div class="field">
        <div class="ui checkbox">
            @Html.CheckBoxFor(m => m.DisplayGitHubLocation, new { @class = "" })
            @Html.LabelFor(m => m.DisplayGitHubLocation, new { @class = "" })
            @Html.ValidationMessageFor(m => m.DisplayGitHubLocation)
        </div>
    </div>

    <div class="field">
        <div class="ui checkbox">
            @Html.CheckBoxFor(m => m.DisplayGitHubBlogUrl, new { @class = "" })
            @Html.LabelFor(m => m.DisplayGitHubBlogUrl, new { @class = "" })
            @Html.ValidationMessageFor(m => m.DisplayGitHubBlogUrl)
        </div>
    </div>

    <div class="field">
        @Html.LabelFor(m => m.TwitterHandle, new { @class = "" })
        <div class="">
            @Html.TextBoxFor(m => m.TwitterHandle, new { @class = "" })
            @Html.ValidationMessageFor(m => m.TwitterHandle)
        </div>
    </div>


    <div class="field">
        <div class="ui checkbox">
            @Html.CheckBoxFor(m => m.DisplayDataDockLink, new { @class = "" })
            @Html.LabelFor(m => m.DisplayDataDockLink, new { @class = "" })
            @Html.ValidationMessageFor(m => m.DisplayDataDockLink)
        </div>
    </div>

    <h4 class="ui dividing header">Data Publisher Details</h4>
  
    <div class="field">
        @Html.LabelFor(m => m.DefaultPublisherType, new {@class = ""})
        <div class="">
            @Html.DropDownListFor(m => m.DefaultPublisherType, Model.PublisherTypes, new {@class = ""})
            @Html.ValidationMessageFor(m => m.DefaultPublisherType)
        </div>
    </div>

    <div class="field">
        @Html.LabelFor(m => m.DefaultPublisherName, new { @class = "" })
        <div class="">
            @Html.TextBoxFor(m => m.DefaultPublisherName, new { @class = "" })
            @Html.ValidationMessageFor(m => m.DefaultPublisherName)
        </div>
    </div>

    <div class="field">
        @Html.LabelFor(m => m.DefaultPublisherEmail, new { @class = "" })
        <div class="">
            @Html.TextBoxFor(m => m.DefaultPublisherEmail, new { @class = "" })
            @Html.ValidationMessageFor(m => m.DefaultPublisherEmail)
        </div>
    </div>

    <div class="field">
        @Html.LabelFor(m => m.DefaultPublisherWebsite, new { @class = "" })
        <div class="">
            @Html.TextBoxFor(m => m.DefaultPublisherWebsite, new { @class = "" })
            @Html.ValidationMessageFor(m => m.DefaultPublisherWebsite)
        </div>
    </div>

    <div class="ui divider"></div>

    <div class="field">

        @Html.LabelFor(m => m.SearchButtons, new { @class = "" })
        @Html.HiddenFor(m=>m.SearchButtons)
        <p><i class="info icon"></i>Use this table to add search buttons to the data portal home page. The <strong>Button Label</strong> is optional, if it is left out then the tag will be displayed as the label on the portal search button.</p>
        <div id="portalSearchButtons"></div>
    </div>
    
    @if (!string.IsNullOrEmpty(Model.LastModifiedBy))
    {
        <div class="ui center aligned container">
            <div class="ui hidden divider"></div>
            <div class="ui compact message">

                These settings were last updated

                @if (Model.OwnerIsOrg)
                {
                    <span> by @Model.LastModifiedBy</span>
                }
                on @Model.LastModified.ToString("F")
            </div>
            <div class="ui hidden divider"></div>
        </div>
    }

</div>

